name: Update version
on: repository_dispatch

jobs:
  release:
    name: Create version PR from release branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: yarn

      - name: Extract version with jq
        run: echo '${{ toJson(github.event.client_payload) }}' | jq -r '.version'

      - name: Write version to file
        run: echo "version: ${{ toJson(github.event.client_payload) }}" > version.txt


      - name: Set Environment Variables
        id: setEnvironmentVariables
        run: echo "$(echo ${{ toJson(github.event.client_payload) }} | jq -r ".version")" >> $GITHUB_OUTPUT
        # run:  echo "PACKAGE_VERSION=$(echo $PACKAGE_VERSION | jq -r '.[0].version')" >> $GITHUB_OUTPUT

      - name: Print version
        run: echo "${{ steps.setEnvironmentVariables.outputs.PACKAGE_VERSION }} ......"

      # - name: Print version
      #   if: steps.changesets.outputs.published == 'true'
      #   run: echo "${{ steps.setVersion.outputs.PACKAGE_VERSION }} ......"

      - name: Update SDK verison
        run: yarn updateAll

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update SDK version
          title: "feat: update SDK version"
          # TODO write a message
          body: Update SDK version
          branch: update-sdk-version
          base: main
          labels: version
          assignees: ${{ github.actor }}
          reviewers: ${{ github.actor }}
          draft: false
